% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ORFtag_pipeline.R
\name{vl_ORFtrap_call_hits_strandBias}
\alias{vl_ORFtrap_call_hits_strandBias}
\title{vl_ORFtrap_call_hits_strandBias}
\usage{
vl_ORFtrap_call_hits_strandBias(
  sorted.forward.counts,
  sorted.reverse.counts,
  unsorted.forward.counts,
  unsorted.reverse.counts,
  genome,
  name,
  output.suffix = "_vs_revStrand",
  output.folder.FC.file = "db/FC_tables/ORFtag"
)
}
\arguments{
\item{sorted.forward.counts}{Character vector of sorted (FACSed) count file paths generated by vl_ORFtag_pipeline(). Counts from all provided files will be merged.}

\item{sorted.reverse.counts}{Character vector of sorted (FACSed), REVERSED count file paths generated by vl_ORFtag_pipeline(). Counts from all provided files will be merged.}

\item{unsorted.forward.counts}{Character vector of unsorted (input) count file paths generated by vl_ORFtag_pipeline(). Counts from all provided files will be merged.}

\item{unsorted.reverse.counts}{Character vector of insorted (input), REVERSED count file paths generated by vl_ORFtag_pipeline(). Counts from all provided files will be merged.}

\item{genome}{Genome annotation to be used. For now, only "mm10" and "hg38" are supported, and the corresponding non-first-exon .gtf will be used for sorting.
See at the bottom of the ?vl_ORFtag_pipeline help page to see how to generate custom non-first-exon start .gtf files for other genomes.}

\item{name}{Name prefix appended to output file names.}

\item{output.suffix}{Name suffix appended to output file names. Default= "_vs_unsorted.txt".}

\item{output.folder.FC.file}{Output folder for FC files. Default= "db/FC_tables/ORFtag".}
}
\value{
Returns FC tables containing DESeq2-like columns.
}
\description{
Function to call hits from a given screen. Receives sorted and unsorted counts as input, computes FC table
}
\examples{
library(vlfunctions)

# 63 hits should be called with this dataset
vl_ORFtrap_call_hits_strandBias(sorted.forward.counts = c("db/exon_assignment/ORFtag/Activator2_sort_rep1_same_strand.txt",
                                                          "db/exon_assignment/ORFtag/Activator2_sort_rep2_same_strand.txt"),
                                sorted.reverse.counts = c("db/exon_assignment/ORFtag/Activator2_sort_rep1_rev_strand.txt",
                                                          "db/exon_assignment/ORFtag/Activator2_sort_rep2_rev_strand.txt"),
                                unsorted.forward.counts = c("db/exon_assignment/ORFtag/Activator2_input_rep1_same_strand.txt",
                                                            "db/exon_assignment/ORFtag/Activator2_input_rep2_same_strand.txt"),
                                unsorted.reverse.counts = c("db/exon_assignment/ORFtag/Activator2_input_rep1_rev_strand.txt",
                                                            "db/exon_assignment/ORFtag/Activator2_input_rep2_rev_strand.txt"),
                                genome = "mm10",
                                name = "Activator_2",
                                output.suffix = "_vs_input_strandBias.txt")
                                
}
