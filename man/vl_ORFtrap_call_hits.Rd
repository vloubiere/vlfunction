% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ORFtag_pipeline.R
\name{vl_ORFtrap_call_hits}
\alias{vl_ORFtrap_call_hits}
\title{ORFtrap_call_hits}
\usage{
vl_ORFtrap_call_hits(
  sorted.forward.counts,
  unsorted.forward.counts,
  genome,
  name,
  padj.cutoff = 0.001,
  log2OR.cutoff = 1,
  log2OR.pseudocount = 1,
  output.suffix = "_vs_unsorted.txt",
  output.folder.FC.file = "db/FC_tables/ORFtag/"
)
}
\arguments{
\item{sorted.forward.counts}{Character vector of sorted (FACSed) count file paths generated by vl_ORFtag_pipeline().
Counts from all provided files will be merged.}

\item{unsorted.forward.counts}{Character vector of unsorted (input) count file paths generated by vl_ORFtag_pipeline().
Counts from all provided files will be merged.}

\item{genome}{Genome annotation to be used.
For now, only "mm10" and "hg38" are supported, and the corresponding non-first-exon .gtf will be used for sorting.
See at the bottom of the ?vl_ORFtag_pipeline help page to see how to generate custom non-first-exon start .gtf files for other genomes.}

\item{name}{Name prefix appended to output file names.}

\item{padj.cutoff}{The p.adjust cutoff to be used to call hits (>=). Default= 0.001}

\item{log2OR.cutoff}{The log2OR cutoff to be used to call hits (>=). Default= 1}

\item{log2OR.pseudocount}{The pseudocount to be added to avoid infinite values. Note that only the log2OR will be affected, not the fisher p.values. Default= 1}

\item{output.suffix}{Name suffix appended to output file names. Default= "_vs_unsorted.txt".}

\item{output.folder.FC.file}{Output folder for FC files. Default= "db/FC_tables/ORFtag".}
}
\value{
Returns FC tables containing DESeq2-like columns.
}
\description{
Function to call hits from a given screen. Receives sorted and unsorted counts as input, computes FC table
}
\examples{
library(vlfunctions)

# Call hits ----
# 124 hits should be identified with this dataset
vl_ORFtrap_call_hits(sorted.forward.counts = c("db/exon_assignment/ORFtag/Activator2_sort_rep1_same_strand.txt",
                                               "db/exon_assignment/ORFtag/Activator2_sort_rep2_same_strand.txt"),
                     unsorted.forward.counts = c("db/exon_assignment/ORFtag/Activator2_input_rep1_same_strand.txt",
                                                 "db/exon_assignment/ORFtag/Activator2_input_rep2_same_strand.txt"),
                     genome = "mm10",
                     name = "Activator_2",
                     output.suffix = "_vs_input.txt")

# Call hits using revese strand (sanity check -> be cautious with the hits that are also found here!) ----
# 81 hits should be identified with the reverse strand
vl_ORFtrap_call_hits(sorted.forward.counts = c("db/exon_assignment/ORFtag/Activator2_sort_rep1_rev_strand.txt",
                                               "db/exon_assignment/ORFtag/Activator2_sort_rep2_rev_strand.txt"),
                     unsorted.forward.counts = c("db/exon_assignment/ORFtag/Activator2_input_rep1_rev_strand.txt",
                                                 "db/exon_assignment/ORFtag/Activator2_input_rep2_rev_strand.txt"),
                     genome = "mm10",
                     name = "Activator_2",
                     output.suffix = "_vs_input_rev_strand.txt")

# 4 of the hits should be identified with the reverse strand and should be considered carefully
hits <- fread("db/FC_tables/ORFtag/Activator_2_vs_input.txt")[(hit), gene_name]
sanityCheck <- fread("db/FC_tables/ORFtag/Activator_2_vs_input_rev_strand.txt")[(hit), gene_name]

# Hits to be considered carefully:
intersect(hits, sanityCheck)

# To call hits using strand bias (not used)
see ?vl_ORFtrap_call_hits_strandBias()
                     
}
